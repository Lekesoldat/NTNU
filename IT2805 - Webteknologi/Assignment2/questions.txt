1. Why does inline style CSS override rules defined in style elements and external stylesheets?
    If two or more rules apply to an element, there are rules for which rules apply. The precedence is decided by "the last rule", "specificity" and "important". For "the last rule", the level you write the CSS makes a difference. There are five levels of styles,and inline style has a higher precedence than style elements and external stylesheets.

2. Give a brief example of when to use ID ( #id ) and when to use classes ( .class ) in CSS.
    You can only have one unique ID. This means that you can only apply certain styles to one specific element. 
    As for classes, many elements can share those styles. If you want to apply a specific style to multiple elements, you use styles. If you want to apply those to one specific element, you use an ID.

    In a dice-game for instance, you'd use an ID on the start button, - there's usually just one of those.
    If there are several dices in the game, you might want the dices to look the same, and therefore use the same class for all of them.


3. What does RGBA mean and what colors can you express with it?
    With RGB you can construct every single color from the combination of RED, GREEN and BLUE. With RGBA you can construct the same, but also with different opacity. The A stands for alpha which specifies the opacity for the color specified by the RGB.


4. Why do we include CSS files inside the head element and not inside the body element?
    If the CSS file is decleared in the <head>, it has already loaded before the <body> starts. If it is put in the <body> tag, a white page will appear for the user until the CSS reaches the user when loading the page. 

    Also, when refreshing a page, the CSS decleared in the <head> are cached, so only the <body> reloads. In other words, it will reload alot quicker than if the styling was to be defined inside the <body>.


5. What CSS selector matches all the p elements inside the article element in the following HTML?
    article > p {...}
    
    and

    article p {...}

    Both will work as the p tag, in this case, is a both direct child of article AND a descendant.
